import pandas as pd
import seaborn as sns


df = pd.read_csv("C:/Users/hp/OneDrive/Desktop/Admission/Admission_Predict.csv")


df.head()

df.shape

from sklearn.preprocessing import Binarizer

bi = Binarizer(threshold = 0.75)
df['Chance of Admit '] = bi.fit_transform(df[['Chance of Admit ']])


df.head()

x = df.drop('Chance of Admit ', axis = 1)
y = df['Chance of Admit ']

y

y = y.astype(int)

y

sns.countplot(x=y)


from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x,y,random_state=0, test_size=0.25)


x_train.shape

x_test.shape

y_train.shape

y_test.shape

from sklearn.tree import DecisionTreeClassifier

classifier = DecisionTreeClassifier(random_state=0)

classifier.fit(x_train,y_train)

y_pred = classifier.predict(x_test)


result = pd.DataFrame({
    'actual' : y_test,
    'predicted' : y_pred
})


result

from sklearn.metrics import ConfusionMatrixDisplay, accuracy_score
from sklearn.metrics import classification_report

accuracy_score(y_test,y_pred)


from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_pred, labels = classifier.classes_)


disp = ConfusionMatrixDisplay(confusion_matrix = cm, display_labels = classifier.classes_)

disp.plot()

accuracy_score(y_test, y_pred)

print(classification_report(y_test, y_pred))

new = [[140,300,110,5,4.5,4.5,9.2,1]]

classifier.predict(new)[0]

from sklearn.tree import plot_tree
plot_tree(classifier, );


from sklearn.tree import plot_tree
import matplotlib.pyplot as plt 
plt.figure(figsize=(12,12))
plot_tree(classifier, fontsize=8, filled=True, rounded=True);


plt.figure(figsize = (12,12))
plot_tree(classifier, fontsize = 8, filled=True, rounded=True,
         feature_names = x.columns, class_names = ['NA','AD']);